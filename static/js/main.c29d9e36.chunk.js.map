{"version":3,"sources":["colors.ts","Person/PersonCard.tsx","Person/PersonCredit.tsx","Person/PersonDetails.tsx","Person/Person.tsx","Person/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["COLORS","PersonCard","props","className","accountData","style","useTheme","css","fullName","firstName","lastName","cn","src","accountImage","url","alt","Typography","variant","locationCity","locationArea","PersonCredit","creditData","theme","spacing","position","productionType","productionTitle","year","PersonDetails","maxCredits","credits","slice","map","credit","key","id","Button","color","Person","personData","locationCountry","company","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c29d9e36.chunk.js","sourcesContent":["export const COLORS = {\n  BORDER_COLOR: \"#E1E3EA\",\n  BG_COLOR: \"#FBFBFD\",\n  LINK_COLOR: \"#3f51b5\",\n  LINK_SECONDARY_COLOR: \"#3f51b588\"\n};\n","/** @jsx jsx */\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { css, jsx } from \"@emotion/core\";\nimport { Account } from \"../App\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { COLORS } from \"../colors\";\ntype Props = {\n  className?: string;\n  accountData: Account;\n};\n\nconst PersonCard: React.FC<Props> = props => {\n  const { className = \"\", accountData } = props;\n\n  const theme = useTheme();\n\n  const style = css`\n    display: flex;\n    flex-direction: column;\n    background-color: var(--siteBG);\n    border: none;\n    box-shadow: 6px 6px 12px #3f51b511, -6px -6px 12px rgba(255, 255, 255, 0.5);\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    border-radius: 1em;\n\n    .PersonCard-Avatar {\n      height: 150px;\n      width: 150px;\n      border-radius: 100%;\n      border: 4px solid ${COLORS.BORDER_COLOR};\n    }\n\n    .link {\n      color: ${COLORS.LINK_COLOR};\n      transition: color 0.4s ease;\n\n      &:hover {\n        color: ${COLORS.LINK_SECONDARY_COLOR};\n        cursor: pointer;\n      }\n    }\n  `;\n\n  const fullName = `${accountData.firstName} ${accountData.lastName}`;\n\n  return (\n    <div className={cn(className, \"PersonCard pt20 pb20 lg-p0\")} css={style}>\n      <img\n        className=\"PersonCard-Avatar mb10\"\n        src={accountData.accountImage.url}\n        alt={fullName}\n      />\n      <Typography className=\"link\" variant=\"h6\">\n        {fullName}\n      </Typography>\n      <Typography variant=\"body2\">\n        {`${accountData.locationCity}, ${accountData.locationArea}`}\n      </Typography>\n    </div>\n  );\n};\n\nexport default PersonCard;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport cn from \"classnames\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Credit } from \"../App\";\nimport { COLORS } from \"../colors\";\n\ntype Props = {\n  className?: string;\n  creditData: Credit;\n};\n\nconst PersonCredit: React.FC<Props> = props => {\n  const { className = \"\", creditData } = props;\n  const theme = useTheme();\n\n  const style = css`\n    width: 100%;\n    justify-content: space-between;\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n\n    .credit-top {\n      margin: ${theme.spacing(1)}px 0;\n\n      &-left {\n        font-weight: 800;\n      }\n\n      &-right {\n        font-weight: normal;\n        text-align: right;\n        font-style: italic;\n      }\n    }\n\n    .credit-bottom {\n      font-size: 0.625rem;\n      color: lightgray;\n\n      &-left {\n        font-weight: 400;\n      }\n\n      &-right {\n        text-align: right;\n      }\n    }\n\n    &:not(:last-of-type) {\n      border-bottom: 1px solid ${COLORS.BORDER_COLOR};\n    }\n  `;\n\n  return (\n    <div\n      className={cn(className, \"PersonCredit two-columns gap20\")}\n      css={style}\n    >\n      <div className=\"PersonCredit-left flex-column flex-space-between\">\n        <Typography className=\"credit-top credit-top-left\" variant=\"body1\">\n          {creditData.position}\n        </Typography>\n        <Typography\n          className=\"credit-bottom credit-bottom-left\"\n          variant=\"body1\"\n        >\n          {creditData.productionType}\n        </Typography>\n      </div>\n      <div className=\"PersonCredit-right\">\n        <Typography className=\"credit-top credit-top-right\" variant=\"body1\">\n          \"{creditData.productionTitle}\"\n        </Typography>\n\n        <Typography\n          className=\"credit-bottom credit-bottom-right\"\n          variant=\"body1\"\n        >\n          {creditData.year}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default PersonCredit;\n","/** @jsx jsx */\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { css, jsx } from \"@emotion/core\";\n// import { useTheme } from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport { Account } from \"../App\";\nimport PersonCredit from \"./PersonCredit\";\n\ntype Props = {\n  className?: string;\n  accountData: Account;\n  maxCredits?: number;\n};\n\nconst PersonDetails: React.FC<Props> = props => {\n  const { className = \"\", accountData, maxCredits = 3 } = props;\n\n  // const theme = useTheme();\n\n  const style = css`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n  `;\n\n  return (\n    <div className={cn(className, \"PersonDetails\")} css={style}>\n      {accountData.credits.slice(0, maxCredits).map(credit => {\n        return <PersonCredit key={credit.id} creditData={credit} />;\n      })}\n      <Button className=\"contact\" color=\"primary\">\n        Contact {accountData.firstName}\n      </Button>\n    </div>\n  );\n};\n\nexport default PersonDetails;\n","/** @jsx jsx */\n\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport cn from \"classnames\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport PersonCard from \"./PersonCard\";\nimport { Account } from \"../App\";\nimport PersonDetails from \"./PersonDetails\";\nimport { COLORS } from \"../colors\";\nimport \"../responsive.css\";\n\ntype Props = {\n  className?: string;\n  accountData: Account;\n};\n\nconst Person: React.FC<Props> = props => {\n  const { className = \"\", accountData } = props;\n  const theme = useTheme();\n  const style = css`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n\n    .Person {\n      width: 850px;\n    }\n\n    .PersonCard-container {\n      width: 300px;\n    }\n\n    .PersonDetails-container {\n      width: 500px;\n      border-left: none;\n    }\n  `;\n\n  return (\n    <div className=\"Person one-column lg-two-columns gap10 lg-gap30 p10 sm-p20 lg-p0 pb30\">\n      <div className=\"PersonCard-container\">\n        <PersonCard accountData={accountData} />\n      </div>\n      <div className=\"PersonDetails-container\">\n        <PersonDetails accountData={accountData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Person;\n","import Person from './Person';\n\nexport default Person;\n","/** @jsx jsx */\n\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport \"./responsive.css\";\nimport \"./overrides.css\";\n// import { useTheme } from '@material-ui/core/styles';\n\nimport Person from \"./Person\";\n\nexport type Credit = {\n  id: string;\n  productionType: string;\n  company: string;\n  position: string;\n  productionTitle: string;\n  year: number;\n};\n\nexport type Account = {\n  id: string | number;\n  firstName: string;\n  lastName: string;\n  locationCity: string;\n  locationArea: string;\n  locationCountry: string;\n  accountImage: {\n    id: string;\n    url: string;\n  };\n  credits: Credit[];\n};\n\nconst personData: Account = {\n  id: \"1\",\n  firstName: \"Alex\",\n  lastName: \"Williamson\",\n  locationCity: \"Los Angeles\",\n  locationArea: \"CA\",\n  locationCountry: \"USA\",\n  accountImage: {\n    id: \"11\",\n    url: \"https://placekitten.com/200/200\"\n  },\n  credits: [\n    {\n      id: \"11\",\n      productionType: \"Reality/Doc (TV)\",\n      company: \"YouTube\",\n      position: \"Camera Operator\",\n      productionTitle: \"Hometown Movies Vol I\",\n      year: 2016\n    },\n    {\n      id: \"12\",\n      productionType: \"Reality/Doc (TV)\",\n      company: \"CineMax\",\n      position: \"Camera Operator\",\n      productionTitle: \"Hometown Movies Vol II\",\n      year: 2016\n    },\n    {\n      id: \"13\",\n      productionType: \"Reality/Doc (TV)\",\n      company: \"Vimeo\",\n      position: \"Camera Operator\",\n      productionTitle: \"Hometown Movies Vol III\",\n      year: 2017\n    },\n    {\n      id: \"14\",\n      productionType: \"Reality/Doc (TV)\",\n      company: \"Netflix\",\n      position: \"Camera Operator\",\n      productionTitle: \"Hometown Movies Vol IV\",\n      year: 2017\n    },\n    {\n      id: \"15\",\n      productionType: \"Reality/Doc (TV)\",\n      company: \"Netflix\",\n      position: \"Camera Operator\",\n      productionTitle: \"Hometown Movies Vol V\",\n      year: 2018\n    }\n  ]\n};\n\nconst App: React.FC<{}> = () => {\n  // const theme = useTheme();\n  const style = css`\n    .inner {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n      min-height: 100vh;\n      width: 100vw;\n      background: var(--siteBG);\n    }\n  `;\n\n  return (\n    <div className=\"container\" css={style}>\n      <div className=\"inner\">\n        <Person accountData={personData} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}